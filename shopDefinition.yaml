swagger: "2.0"
info:
  version: "1.0.0"
  title: "Shop API"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "shopFinder.swagger.io"
basePath: "/api/v1"
schemes:
  - "http"
paths:
  /shop: 
    get: 
      tags: 
      - "Shop"
      summary: "List shops" 
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful"
          schema: 
            $ref: "#/definitions/shop"

    post: 
      tags: 
      - "Shop"
      summary: "Create shop"
      operationId: "addShop"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Shop object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/shop"
      responses:
        200:
          description: "Successful"
          schema: 
            $ref: "#/definitions/shop"

    put: 
      tags: 
      - "Shop"
      summary: "Update shop"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful"
          schema: 
            # $ref: "#/definitions/shop"
            $ref: "#/definitions/shop/shopId"
            
    delete:
      tags: 
      - "Shop"
      summary: "Deletes a shop"
      description: ""
      operationId: "deleteShop"
      produces:
      - "application/json"
      parameters:
      - name: "shopId"
        in: "path"
        description: "Shop id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200: 
          description: "Deleted"
          schema:   
            $ref: "#/definitions/shop"
            $ref: "#/definitions/shop/shopId"
        404:
          description: "Shop not found"
            
  # /shop/shopId:
  #   get: 
  #     tags: 
  #     - "Shop"
  #     summary: "List shops" 
  #     consumes:
  #     - "application/json"
  #     produces:
  #     - "application/json"
  #     parameters:
  #     - name: "shopId"
  #       in: "path"
  #       description: "Shop id to find"
  #       required: true
  #       type: "integer"
  #     responses:
  #       200:
  #         description: "Successful"
  #         schema: 
  #           $ref: "#/definitions/shop"


definitions:
  shop: 
    type: "object"
    properties: 
      id: 
        type: "integer"
        format: "int64"
      name: 
        type: "string"
        example: "Zara"
      type: 
        type: "string"
        enum: 
          - "Shoe"
          - "Grocery"
      location: 
        type: "object"
        properties:
          postcode: 
            type: "string"
            example: "SP10 1DE"
          town: 
            type: "string"
            example: "Andover"
  shopId: 
    type: "object"
    properties: 
      id: 
        type: "integer"
        format: "int64"
      name: 
        type: "string"
        example: "Zara"
      type: 
        type: "string"
        enum: 
          - "Shoe"
          - "Grocery"
      